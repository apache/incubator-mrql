/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

type point = < X: double, Y: double >;

function distance ( x: point, y: point ): double {
   sqrt(pow(x.X-y.X,2)+pow(x.Y-y.Y,2))
};

incr repeat centroids = { < X: 3.0 as double, Y: 3.0 as double >,
                          < X: 3.0, Y: 7.0 >,
                          < X: 7.0, Y: 3.0 >,
                          < X: 7.0, Y: 7.0 > }
  step select ( < X: avg(s.X), Y: avg(s.Y) >, true )
         from s in stream(binary,"tmp/points.bin")
        group by k: (select c from c in centroids
                      order by distance(c,s))[0]
  limit 5;
